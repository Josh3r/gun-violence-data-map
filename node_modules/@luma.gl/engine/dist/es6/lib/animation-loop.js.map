{"version":3,"sources":["../../../src/lib/animation-loop.js"],"names":["isWebGL","createGLContext","instrumentGLContext","resizeGLContext","resetParameters","requestAnimationFrame","cancelAnimationFrame","Query","lumaStats","Framebuffer","log","assert","isBrowser","isPage","document","statIdCounter","AnimationLoop","constructor","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","stats","get","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","delete","_setDisplay","setNeedsRedraw","reason","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","isSupported","animationProps","appContext","_addCallbackData","_startLoop","redraw","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","attachTimeline","detachTimeline","waitForRender","Promise","resolve","toDataURL","canvas","args","getHTMLControlValue","id","defaultValue","element","getElementById","Number","value","setViewParameters","removed","renderFrame","_requestAnimationFrame","reject","readyState","window","onload","display","animationLoop","renderFrameCallback","_onSetupFrame","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","width","height","aspect","_getSizeAndAspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","addEventListener","e","offsetX","offsetY"],"mappings":"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","sourcesContent":["/* global window, OffscreenCanvas */\nimport {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\nimport {isBrowser} from 'probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.onload = () => {\n              resolve(document);\n            };\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.requestAnimationFrame(renderFrameCallback)) {\n      return;\n    }\n\n    requestAnimationFrame(renderFrameCallback);\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this.animationProps);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      /* global document */\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"],"file":"animation-loop.js"}