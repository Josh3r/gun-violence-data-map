{"version":3,"sources":["../../../src/lib/animation-loop.js"],"names":["isPage","document","statIdCounter","AnimationLoop","props","onCreateContext","opts","onAddHTML","onInitialize","onRender","onFinalize","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","stats","lumaStats","get","useDevicePixels","log","deprecated","useDevicePixelRatio","needsRedraw","timeline","cpuTime","gpuTime","frameRate","_initialized","_running","_animationFrameId","_nextFramePromise","_resolveNextFrame","_cpuStartTime","setProps","start","bind","stop","_pageLoadPromise","_onMousemove","_onMouseleave","_setDisplay","reason","_getPageLoadPromise","then","_createWebGLContext","_createFramebuffer","_startEventHandling","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_gpuTimeQuery","Query","isSupported","animationProps","appContext","_addCallbackData","_startLoop","_beginTimers","_setupFrame","_renderFrame","_clearNeedsRedraw","offScreen","commit","_endTimers","_finalizeCallbackData","setNeedsRedraw","Promise","resolve","waitForRender","canvas","toDataURL","id","defaultValue","element","getElementById","Number","value","removed","renderFrame","redraw","_requestAnimationFrame","reject","readyState","window","onload","display","animationLoop","renderFrameCallback","requestAnimationFrame","_onSetupFrame","_resizeFramebuffer","framebuffer","startTime","Date","now","engineTime","tick","tock","time","_timeline","_loop","_animationLoop","_mousePosition","_getSizeAndAspect","width","height","aspect","update","Math","floor","getTime","_offScreen","Object","assign","OffscreenCanvas","Error","_createInfoDiv","wrapperDiv","createElement","body","appendChild","style","position","div","left","bottom","background","html","innerHTML","drawingBufferWidth","drawingBufferHeight","clientHeight","clientWidth","viewport","Framebuffer","resize","timeEnd","timeStart","isResultAvailable","isTimerDisjoint","addTime","getTimerMilliseconds","beginTimeElapsedQuery","end","addEventListener","e","offsetX","offsetY"],"mappings":"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","sourcesContent":["/* global window, OffscreenCanvas */\nimport {\n  isWebGL,\n  createGLContext,\n  instrumentGLContext,\n  resizeGLContext,\n  resetParameters\n} from '@luma.gl/gltools';\nimport {\n  requestAnimationFrame,\n  cancelAnimationFrame,\n  Query,\n  lumaStats,\n  // TODO - remove dependency on framebuffer (bundle size impact)\n  Framebuffer,\n  log,\n  assert\n} from '@luma.gl/webgl';\nimport {isBrowser} from 'probe.gl/env';\n\nconst isPage = isBrowser() && typeof document !== 'undefined';\n\nlet statIdCounter = 0;\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onAddHTML = null,\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true,\n      stats = lumaStats.get(`animation-loop-${statIdCounter++}`)\n    } = props;\n\n    let {useDevicePixels = true} = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onAddHTML,\n      onInitialize,\n      onRender,\n      onFinalize,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.needsRedraw = null;\n    this.timeline = null;\n    this.stats = stats;\n    this.cpuTime = this.stats.get('CPU Time');\n    this.gpuTime = this.stats.get('GPU Time');\n    this.frameRate = this.stats.get('Frame Rate');\n\n    this._initialized = false;\n    this._running = false;\n    this._animationFrameId = null;\n    this._nextFramePromise = null;\n    this._resolveNextFrame = null;\n    this._cpuStartTime = 0;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n\n    this._pageLoadPromise = null;\n\n    this._onMousemove = this._onMousemove.bind(this);\n    this._onMouseleave = this._onMouseleave.bind(this);\n  }\n\n  delete() {\n    this.stop();\n    this._setDisplay(null);\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    if (this._running) {\n      return this;\n    }\n    this._running = true;\n    // console.debug(`Starting ${this.constructor.name}`);\n    // Wait for start promise before rendering frame\n    this._getPageLoadPromise()\n      .then(() => {\n        if (!this._running || this._initialized) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n        this._startEventHandling();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\n\n        this._initialized = true;\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.onInitialize(this.animationProps);\n      })\n      .then(appContext => {\n        if (this._running) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false) {\n            this._startLoop();\n          }\n        }\n      });\n    return this;\n  }\n\n  // Redraw now\n  redraw() {\n    this._beginTimers();\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    this._renderFrame(this.animationProps);\n\n    // clear needsRedraw flag\n    this._clearNeedsRedraw();\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n    // Chrome's offscreen canvas does not require gl.commit\n    if (this.offScreen && this.gl.commit) {\n      this.gl.commit();\n    }\n\n    if (this._resolveNextFrame) {\n      this._resolveNextFrame(this);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n    }\n\n    this._endTimers();\n\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._running) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._nextFramePromise = null;\n      this._resolveNextFrame = null;\n      this._animationFrameId = null;\n      this._running = false;\n    }\n    return this;\n  }\n\n  attachTimeline(timeline) {\n    this.timeline = timeline;\n\n    return this.timeline;\n  }\n\n  detachTimeline() {\n    this.timeline = null;\n  }\n\n  waitForRender() {\n    this.setNeedsRedraw('waitForRender');\n\n    if (!this._nextFramePromise) {\n      this._nextFramePromise = new Promise(resolve => {\n        this._resolveNextFrame = resolve;\n      });\n    }\n    return this._nextFramePromise;\n  }\n\n  async toDataURL() {\n    this.setNeedsRedraw('toDataURL');\n\n    await this.waitForRender();\n\n    return this.gl.canvas.toDataURL();\n  }\n\n  onCreateContext(...args) {\n    return this.props.onCreateContext(...args);\n  }\n\n  onInitialize(...args) {\n    return this.props.onInitialize(...args);\n  }\n\n  onRender(...args) {\n    return this.props.onRender(...args);\n  }\n\n  onFinalize(...args) {\n    return this.props.onFinalize(...args);\n  }\n\n  // DEPRECATED/REMOVED METHODS\n\n  getHTMLControlValue(id, defaultValue = 1) {\n    const element = document.getElementById(id);\n    return element ? Number(element.value) : defaultValue;\n  }\n\n  // Update parameters\n  setViewParameters() {\n    log.removed('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _startLoop() {\n    const renderFrame = () => {\n      if (!this._running) {\n        return;\n      }\n      this.redraw();\n      this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    };\n\n    // cancel any pending renders to ensure only one loop can ever run\n    cancelAnimationFrame(this._animationFrameId);\n    this._animationFrameId = this._requestAnimationFrame(renderFrame);\n  }\n\n  // PRIVATE METHODS\n\n  _getPageLoadPromise() {\n    if (!this._pageLoadPromise) {\n      this._pageLoadPromise = isPage\n        ? new Promise((resolve, reject) => {\n            if (isPage && document.readyState === 'complete') {\n              resolve(document);\n              return;\n            }\n            window.onload = () => {\n              resolve(document);\n            };\n          })\n        : Promise.resolve({});\n    }\n    return this._pageLoadPromise;\n  }\n\n  _setDisplay(display) {\n    if (this.display) {\n      this.display.delete();\n      this.display.animationLoop = null;\n    }\n\n    // store animation loop on the display\n    if (display) {\n      display.animationLoop = this;\n    }\n\n    this.display = display;\n  }\n\n  _requestAnimationFrame(renderFrameCallback) {\n    // E.g. VR display has a separate animation frame to sync with headset\n    if (this.display && this.display.requestAnimationFrame(renderFrameCallback)) {\n      return;\n    }\n\n    requestAnimationFrame(renderFrameCallback);\n  }\n\n  // Called on each frame, can be overridden to call onRender multiple times\n  // to support e.g. stereoscopic rendering\n  _renderFrame(...args) {\n    // Allow e.g. VR display to render multiple frames.\n    if (this.display) {\n      this.display._renderFrame(...args);\n      return;\n    }\n\n    // call callback\n    this.onRender(...args);\n    // end callback\n  }\n\n  _clearNeedsRedraw() {\n    this.needsRedraw = null;\n  }\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this.animationProps);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this.animationProps = {\n      gl: this.gl,\n\n      stop: this.stop,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n\n      // Animation props\n      startTime: Date.now(),\n      engineTime: 0,\n      tick: 0,\n      tock: 0,\n\n      // Timeline time for back compatibility\n      time: 0,\n\n      // Experimental\n      _timeline: this.timeline,\n      _loop: this,\n      _animationLoop: this,\n      _mousePosition: null // Event props\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    const {width, height, aspect} = this._getSizeAndAspect();\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    if (aspect !== this.animationProps.aspect) {\n      this.setNeedsRedraw('drawing buffer aspect changed');\n    }\n\n    this.animationProps.width = width;\n    this.animationProps.height = height;\n    this.animationProps.aspect = aspect;\n\n    this.animationProps.needsRedraw = this.needsRedraw;\n\n    // Update time properties\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n\n    if (this.timeline) {\n      this.timeline.update(this.animationProps.engineTime);\n    }\n\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\n    this.animationProps.tock++;\n\n    // For back compatibility\n    this.animationProps.time = this.timeline\n      ? this.timeline.getTime()\n      : this.animationProps.engineTime;\n\n    // experimental\n    this.animationProps._offScreen = this.offScreen;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.onFinalize(this.animationProps);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this.animationProps = Object.assign({}, this.animationProps, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    this.offScreen =\n      opts.canvas &&\n      typeof OffscreenCanvas !== 'undefined' &&\n      opts.canvas instanceof OffscreenCanvas;\n\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, this.props.glOptions);\n    this.gl = this.props.gl ? instrumentGLContext(this.props.gl, opts) : this.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n\n    this._createInfoDiv();\n  }\n\n  _createInfoDiv() {\n    if (this.gl.canvas && this.props.onAddHTML) {\n      /* global document */\n      const wrapperDiv = document.createElement('div');\n      document.body.appendChild(wrapperDiv);\n      wrapperDiv.style.position = 'relative';\n      const div = document.createElement('div');\n      div.style.position = 'absolute';\n      div.style.left = '10px';\n      div.style.bottom = '10px';\n      div.style.width = '300px';\n      div.style.background = 'white';\n      wrapperDiv.appendChild(this.gl.canvas);\n      wrapperDiv.appendChild(div);\n      const html = this.props.onAddHTML(div);\n      if (html) {\n        div.innerHTML = html;\n      }\n    }\n  }\n\n  _getSizeAndAspect() {\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\n    let aspect = 1;\n    const {canvas} = this.gl;\n\n    if (canvas && canvas.clientHeight) {\n      aspect = canvas.clientWidth / canvas.clientHeight;\n    } else if (width > 0 && height > 0) {\n      aspect = width / height;\n    }\n\n    return {width, height, aspect};\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n\n  _beginTimers() {\n    this.frameRate.timeEnd();\n    this.frameRate.timeStart();\n\n    // Check if timer for last frame has completed.\n    // GPU timer results are never available in the same\n    // frame they are captured.\n    if (\n      this._gpuTimeQuery &&\n      this._gpuTimeQuery.isResultAvailable() &&\n      !this._gpuTimeQuery.isTimerDisjoint()\n    ) {\n      this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\n    }\n\n    if (this._gpuTimeQuery) {\n      // GPU time query start\n      this._gpuTimeQuery.beginTimeElapsedQuery();\n    }\n\n    this.cpuTime.timeStart();\n  }\n\n  _endTimers() {\n    this.cpuTime.timeEnd();\n\n    if (this._gpuTimeQuery) {\n      // GPU time query end. Results will be available on next frame.\n      this._gpuTimeQuery.end();\n    }\n  }\n\n  // Event handling\n\n  _startEventHandling() {\n    const {canvas} = this.gl;\n    if (canvas) {\n      canvas.addEventListener('mousemove', this._onMousemove);\n      canvas.addEventListener('mouseleave', this._onMouseleave);\n    }\n  }\n\n  _onMousemove(e) {\n    this.animationProps._mousePosition = [e.offsetX, e.offsetY];\n  }\n  _onMouseleave(e) {\n    this.animationProps._mousePosition = null;\n  }\n}\n"],"file":"animation-loop.js"}