{"version":3,"sources":["../../src/matrix3.js"],"names":["Matrix","validateVector","Vector2","Vector3","mat3","vec2","vec3","IDENTITY","validateMatrix3","m","length","Number","isFinite","Matrix3","args","Array","isArray","arguments","copy","identity","array","setColumnMajor","m00","m01","m02","m10","m11","m12","m20","m21","m22","check","determinant","i","q","fromQuat","transpose","invert","a","multiply","radians","rotate","factor","scale","vec","translate","vector","out","transformMat3","transformVector2","transformVector3","Error"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Matrix from './lib/matrix';\nimport {validateVector} from './lib/validators';\n// import {checkNumber} from './lib/common';\nimport Vector2 from './vector2';\nimport Vector3 from './vector3';\n\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n// eslint-disable-next-line complexity\nexport function validateMatrix3(m) {\n  return (\n    m.length === 9 &&\n    Number.isFinite(m[0]) &&\n    Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) &&\n    Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) &&\n    Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) &&\n    Number.isFinite(m[7]) &&\n    Number.isFinite(m[8])\n  );\n}\n\nexport default class Matrix3 extends Matrix {\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get Vector() {\n    return Vector3;\n  }\n\n  constructor(...args) {\n    super(9);\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    return this.setColumnMajor(...array);\n  }\n\n  set(...args) {\n    return this.setColumnMajor(...args);\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  // eslint-disable-next-line max-params\n  setColumnMajor(m00 = 1, m10 = 0, m20 = 0, m01 = 0, m11 = 1, m21 = 0, m02 = 0, m12 = 0, m22 = 1) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    for (let i = 0; i < IDENTITY.length; ++i) {\n      this[i] = IDENTITY[i];\n    }\n    return this.check();\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  transformVector2(vector, out) {\n    out = out || new Vector2();\n    vec2.transformMat3(out, vector, this);\n    validateVector(out, 2);\n    return out;\n  }\n\n  transformVector3(vector, out) {\n    out = out || new Vector3();\n    vec3.transformMat3(out, vector, this);\n    validateVector(out, 3);\n    return out;\n  }\n\n  transformVector(vector, out) {\n    switch (vector.length) {\n      case 2:\n        return this.transformVector2(vector, out);\n      case 3:\n        return this.transformVector3(vector, out);\n      default:\n        throw new Error('Illegal vector');\n    }\n  }\n}\n"],"file":"matrix3.js"}