{"version":3,"sources":["../../src/gltf-writer.js"],"names":["name","extensions","mimeType","encodeSync","binary","options","gltf","byteOffset","byteLength","arrayBuffer","ArrayBuffer","dataView","DataView"],"mappings":";;;;;;;AAAA;;eAEe;AACbA,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,UAAU,EAAE,CAAC,KAAD,CAFC;AAIbC,EAAAA,QAAQ,EAAE,iBAJG;AAKbC,EAAAA,UAAU,EAAVA,UALa;AAMbC,EAAAA,MAAM,EAAE,IANK;AAObC,EAAAA,OAAO,EAAE;AAPI,C;;;AAUf,SAASF,UAAT,CAAoBG,IAApB,EAAwC;AAAA,MAAdD,OAAc,uEAAJ,EAAI;AAAA,4BACbA,OADa,CAC/BE,UAD+B;AAAA,MAC/BA,UAD+B,oCAClB,CADkB;AAItC,MAAMC,UAAU,GAAG,gCAAeF,IAAf,EAAqB,IAArB,EAA2BC,UAA3B,EAAuCF,OAAvC,CAAnB;AACA,MAAMI,WAAW,GAAG,IAAIC,WAAJ,CAAgBF,UAAhB,CAApB;AACA,MAAMG,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,WAAb,CAAjB;AACA,kCAAeH,IAAf,EAAqBK,QAArB,EAA+BJ,UAA/B,EAA2CF,OAA3C;AAEA,SAAOI,WAAP;AACD","sourcesContent":["import {encodeGLTFSync} from './lib/encode-gltf';\n\nexport default {\n  name: 'glTF',\n  extensions: ['glb'], // We only support encoding to binary GLB, not to JSON GLTF\n  // mimeType: 'model/gltf-binary',\n  mimeType: 'model/gltf+json',\n  encodeSync,\n  binary: true,\n  options: {}\n};\n\nfunction encodeSync(gltf, options = {}) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length, then create arraybuffer and encode\n  const byteLength = encodeGLTFSync(gltf, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encodeGLTFSync(gltf, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n"],"file":"gltf-writer.js"}