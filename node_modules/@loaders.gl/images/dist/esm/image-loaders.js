import parseImage from './lib/parsers/parse-image';
import parseSVG from './lib/parsers/parse-svg';
import { isPng, isGif, isBmp, isJpeg } from './lib/binary-image-api/binary-image-parsers';
var VERSION = typeof "2.0.0" !== 'undefined' ? "2.0.0" : 'latest';
export var JPEGLoader = {
  id: 'jpeg',
  category: 'image',
  name: 'JPEG',
  version: VERSION,
  extensions: ['jpg', 'jpeg'],
  mimeType: 'image/jpeg',
  test: function test(arrayBuffer) {
    return isJpeg(new DataView(arrayBuffer));
  },
  parse: parseImage,
  options: {}
};
export var PNGLoader = {
  id: 'png',
  category: 'image',
  name: 'PNG',
  version: VERSION,
  extensions: ['png'],
  mimeType: 'image/png',
  test: function test(arrayBuffer) {
    return isPng(new DataView(arrayBuffer));
  },
  parse: parseImage,
  options: {}
};
export var GIFLoader = {
  id: 'gif',
  category: 'image',
  name: 'GIF',
  version: VERSION,
  extensions: ['gif'],
  mimeType: 'image/gif',
  test: function test(arrayBuffer) {
    return isGif(new DataView(arrayBuffer));
  },
  parse: parseImage,
  options: {}
};
export var BMPLoader = {
  id: 'bmp',
  category: 'image',
  name: 'BMP',
  version: VERSION,
  extensions: ['gif'],
  mimeType: 'image/gif',
  test: function test(arrayBuffer) {
    return isBmp(new DataView(arrayBuffer));
  },
  parse: parseImage,
  options: {}
};
export var SVGLoader = {
  id: 'svg',
  name: 'SVG',
  version: VERSION,
  extensions: ['svg'],
  mimeType: 'image/svg+xml',
  parse: parseSVG
};
export var ImageLoaders = [JPEGLoader, PNGLoader, GIFLoader, BMPLoader, SVGLoader];
//# sourceMappingURL=image-loaders.js.map