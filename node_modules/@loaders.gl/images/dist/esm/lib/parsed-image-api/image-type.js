import { global, isBrowser } from '../utils/globals';
import assert from '../utils/assert';
export var IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';
export var HTML_IMAGE_SUPPORTED = typeof Image !== 'undefined';
export var NODE_IMAGE_SUPPORTED = Boolean(global._parseImageNode);
export function isImageTypeSupported(type) {
  switch (type) {
    case 'auto':
      return true;

    case 'imagebitmap':
      return IMAGE_BITMAP_SUPPORTED;

    case 'html':
      return HTML_IMAGE_SUPPORTED;

    case 'ndarray':
      return NODE_IMAGE_SUPPORTED;

    default:
      throw new Error("Unknown image format ".concat(type));
  }
}
export function getDefaultImageType() {
  if (isImageTypeSupported('ndarray')) {
    return 'ndarray';
  }

  if (isImageTypeSupported('html')) {
    return 'html';
  }

  if (isImageTypeSupported('imagebitmap')) {
    return 'imagebitmap';
  }

  if (!isBrowser) {
    throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js");
  }

  return assert(false);
}
//# sourceMappingURL=image-type.js.map