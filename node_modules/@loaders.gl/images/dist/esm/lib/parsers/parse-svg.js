import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import { loadToImage } from './parse-to-image';
export default function parseSVG(_x, _x2) {
  return _parseSVG.apply(this, arguments);
}

function _parseSVG() {
  _parseSVG = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {
    var textDecoder, xmlText, src;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            textDecoder = new TextDecoder();
            xmlText = textDecoder.decode(arrayBuffer);
            src = "data:image/svg+xml;base64,".concat(btoa(xmlText));
            _context.next = 5;
            return loadToImage(src, options);

          case 5:
            return _context.abrupt("return", _context.sent);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _parseSVG.apply(this, arguments);
}
//# sourceMappingURL=parse-svg.js.map