{"version":3,"sources":["../../../../src/lib/parsers/parse-to-image-bitmap.js"],"names":["parseToImageBitmap","arrayBuffer","options","blob","Blob","Uint8Array","imagebitmapOptions","imagebitmap","createImageBitmap"],"mappings":"AAMA,eAAe,SAASA,kBAAT,CAA4BC,WAA5B,EAAyCC,OAAzC,EAAkD;AAE/D,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeJ,WAAf,CAAD,CAAT,CAAb;AACA,QAAMK,kBAAkB,GAAGJ,OAAO,IAAIA,OAAO,CAACK,WAA9C;AACA,SAAOD,kBAAkB,GAAGE,iBAAiB,CAACL,IAAD,CAApB,GAA6BK,iBAAiB,CAACL,IAAD,EAAOG,kBAAP,CAAvE;AACD","sourcesContent":["/* global Blob, createImageBitmap */\n\n// Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n// Supported on worker threads, not supported on Edge, IE11 and Safari\n// https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n\nexport default function parseToImageBitmap(arrayBuffer, options) {\n  // NOTE: In some cases unnecessary conversion to blob (response, blob, file input)\n  const blob = new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed...\n  const imagebitmapOptions = options && options.imagebitmap;\n  return imagebitmapOptions ? createImageBitmap(blob) : createImageBitmap(blob, imagebitmapOptions);\n}\n"],"file":"parse-to-image-bitmap.js"}