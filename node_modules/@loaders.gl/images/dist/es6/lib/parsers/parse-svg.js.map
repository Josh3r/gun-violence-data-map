{"version":3,"sources":["../../../../src/lib/parsers/parse-svg.js"],"names":["loadToImage","parseSVG","arrayBuffer","options","textDecoder","TextDecoder","xmlText","decode","src","btoa"],"mappings":"AACA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,eAAe,eAAeC,QAAf,CAAwBC,WAAxB,EAAqCC,OAArC,EAA8C;AAE3D,QAAMC,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA,QAAMC,OAAO,GAAGF,WAAW,CAACG,MAAZ,CAAmBL,WAAnB,CAAhB;AAMA,QAAMM,GAAG,uCAAgCC,IAAI,CAACH,OAAD,CAApC,CAAT;AACA,SAAO,MAAMN,WAAW,CAACQ,GAAD,EAAML,OAAN,CAAxB;AACD","sourcesContent":["/* global TextDecoder, btoa */ // encodeURLComponent,\nimport {loadToImage} from './parse-to-image';\n\nexport default async function parseSVG(arrayBuffer, options) {\n  // Prepare a properly tagged data URL, and load using normal mechanism\n  const textDecoder = new TextDecoder();\n  const xmlText = textDecoder.decode(arrayBuffer);\n  // TODO Escape in browser to support e.g. Chinese characters\n  // if (typeof unescape === 'function' && typeof encodeURLComponent === 'function') {\n  //   xmlText = unescape(encodeURLComponent(xmlText));\n  // }\n  // base64 encoding is safer. utf-8 fails in some browsers\n  const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n  return await loadToImage(src, options);\n}\n"],"file":"parse-svg.js"}