{"version":3,"sources":["../../src/image-loaders.js"],"names":["VERSION","JPEGLoader","id","category","name","version","extensions","mimeType","test","arrayBuffer","DataView","parse","parseImage","options","PNGLoader","GIFLoader","BMPLoader","SVGLoader","parseSVG","ImageLoaders"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AAEA,IAAMA,OAAO,GAAG,mBAAuB,WAAvB,aAAmD,QAAnE;AAEO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,EAAE,EAAE,MADoB;AAExBC,EAAAA,QAAQ,EAAE,OAFc;AAGxBC,EAAAA,IAAI,EAAE,MAHkB;AAIxBC,EAAAA,OAAO,EAAEL,OAJe;AAKxBM,EAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,MAAR,CALY;AAMxBC,EAAAA,QAAQ,EAAE,YANc;AAOxBC,EAAAA,IAAI,EAAE,cAAAC,WAAW;AAAA,WAAI,gCAAO,IAAIC,QAAJ,CAAaD,WAAb,CAAP,CAAJ;AAAA,GAPO;AAQxBE,EAAAA,KAAK,EAAEC,sBARiB;AAUxBC,EAAAA,OAAO,EAAE;AAVe,CAAnB;;AAaA,IAAMC,SAAS,GAAG;AACvBZ,EAAAA,EAAE,EAAE,KADmB;AAEvBC,EAAAA,QAAQ,EAAE,OAFa;AAGvBC,EAAAA,IAAI,EAAE,KAHiB;AAIvBC,EAAAA,OAAO,EAAEL,OAJc;AAKvBM,EAAAA,UAAU,EAAE,CAAC,KAAD,CALW;AAMvBC,EAAAA,QAAQ,EAAE,WANa;AAOvBC,EAAAA,IAAI,EAAE,cAAAC,WAAW;AAAA,WAAI,+BAAM,IAAIC,QAAJ,CAAaD,WAAb,CAAN,CAAJ;AAAA,GAPM;AAQvBE,EAAAA,KAAK,EAAEC,sBARgB;AAUvBC,EAAAA,OAAO,EAAE;AAVc,CAAlB;;AAaA,IAAME,SAAS,GAAG;AACvBb,EAAAA,EAAE,EAAE,KADmB;AAEvBC,EAAAA,QAAQ,EAAE,OAFa;AAGvBC,EAAAA,IAAI,EAAE,KAHiB;AAIvBC,EAAAA,OAAO,EAAEL,OAJc;AAKvBM,EAAAA,UAAU,EAAE,CAAC,KAAD,CALW;AAMvBC,EAAAA,QAAQ,EAAE,WANa;AAOvBC,EAAAA,IAAI,EAAE,cAAAC,WAAW;AAAA,WAAI,+BAAM,IAAIC,QAAJ,CAAaD,WAAb,CAAN,CAAJ;AAAA,GAPM;AAQvBE,EAAAA,KAAK,EAAEC,sBARgB;AASvBC,EAAAA,OAAO,EAAE;AATc,CAAlB;;AAYA,IAAMG,SAAS,GAAG;AACvBd,EAAAA,EAAE,EAAE,KADmB;AAEvBC,EAAAA,QAAQ,EAAE,OAFa;AAGvBC,EAAAA,IAAI,EAAE,KAHiB;AAIvBC,EAAAA,OAAO,EAAEL,OAJc;AAKvBM,EAAAA,UAAU,EAAE,CAAC,KAAD,CALW;AAMvBC,EAAAA,QAAQ,EAAE,WANa;AAOvBC,EAAAA,IAAI,EAAE,cAAAC,WAAW;AAAA,WAAI,+BAAM,IAAIC,QAAJ,CAAaD,WAAb,CAAN,CAAJ;AAAA,GAPM;AAQvBE,EAAAA,KAAK,EAAEC,sBARgB;AASvBC,EAAAA,OAAO,EAAE;AATc,CAAlB;;AAYA,IAAMI,SAAS,GAAG;AACvBf,EAAAA,EAAE,EAAE,KADmB;AAEvBE,EAAAA,IAAI,EAAE,KAFiB;AAGvBC,EAAAA,OAAO,EAAEL,OAHc;AAIvBM,EAAAA,UAAU,EAAE,CAAC,KAAD,CAJW;AAKvBC,EAAAA,QAAQ,EAAE,eALa;AAOvBI,EAAAA,KAAK,EAAEO;AAPgB,CAAlB;;AAUA,IAAMC,YAAY,GAAG,CAC1BlB,UAD0B,EAE1Ba,SAF0B,EAG1BC,SAH0B,EAI1BC,SAJ0B,EAO1BC,SAP0B,CAArB","sourcesContent":["/* global __VERSION__ */ // __VERSION__ is injected by babel-plugin-version-inline\nimport parseImage from './lib/parsers/parse-image';\nimport parseSVG from './lib/parsers/parse-svg';\nimport {isPng, isGif, isBmp, isJpeg} from './lib/binary-image-api/binary-image-parsers';\n\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport const JPEGLoader = {\n  id: 'jpeg',\n  category: 'image',\n  name: 'JPEG',\n  version: VERSION,\n  extensions: ['jpg', 'jpeg'],\n  mimeType: 'image/jpeg',\n  test: arrayBuffer => isJpeg(new DataView(arrayBuffer)),\n  parse: parseImage,\n  // test: ,\n  options: {}\n};\n\nexport const PNGLoader = {\n  id: 'png',\n  category: 'image',\n  name: 'PNG',\n  version: VERSION,\n  extensions: ['png'],\n  mimeType: 'image/png',\n  test: arrayBuffer => isPng(new DataView(arrayBuffer)),\n  parse: parseImage,\n  // test: , - Add sniffer here\n  options: {}\n};\n\nexport const GIFLoader = {\n  id: 'gif',\n  category: 'image',\n  name: 'GIF',\n  version: VERSION,\n  extensions: ['gif'],\n  mimeType: 'image/gif',\n  test: arrayBuffer => isGif(new DataView(arrayBuffer)),\n  parse: parseImage,\n  options: {}\n};\n\nexport const BMPLoader = {\n  id: 'bmp',\n  category: 'image',\n  name: 'BMP',\n  version: VERSION,\n  extensions: ['gif'],\n  mimeType: 'image/gif',\n  test: arrayBuffer => isBmp(new DataView(arrayBuffer)),\n  parse: parseImage,\n  options: {}\n};\n\nexport const SVGLoader = {\n  id: 'svg',\n  name: 'SVG',\n  version: VERSION,\n  extensions: ['svg'],\n  mimeType: 'image/svg+xml',\n  // test: , - Add sniffer here\n  parse: parseSVG\n};\n\nexport const ImageLoaders = [\n  JPEGLoader,\n  PNGLoader,\n  GIFLoader,\n  BMPLoader,\n  // WEBPLoader,\n  // ICOLoader,\n  SVGLoader\n];\n"],"file":"image-loaders.js"}