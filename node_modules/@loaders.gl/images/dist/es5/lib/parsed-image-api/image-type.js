"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isImageTypeSupported = isImageTypeSupported;
exports.getDefaultImageType = getDefaultImageType;
exports.NODE_IMAGE_SUPPORTED = exports.HTML_IMAGE_SUPPORTED = exports.IMAGE_BITMAP_SUPPORTED = void 0;

var _globals = require("../utils/globals");

var _assert = _interopRequireDefault(require("../utils/assert"));

var IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';
exports.IMAGE_BITMAP_SUPPORTED = IMAGE_BITMAP_SUPPORTED;
var HTML_IMAGE_SUPPORTED = typeof Image !== 'undefined';
exports.HTML_IMAGE_SUPPORTED = HTML_IMAGE_SUPPORTED;
var NODE_IMAGE_SUPPORTED = Boolean(_globals.global._parseImageNode);
exports.NODE_IMAGE_SUPPORTED = NODE_IMAGE_SUPPORTED;

function isImageTypeSupported(type) {
  switch (type) {
    case 'auto':
      return true;

    case 'imagebitmap':
      return IMAGE_BITMAP_SUPPORTED;

    case 'html':
      return HTML_IMAGE_SUPPORTED;

    case 'ndarray':
      return NODE_IMAGE_SUPPORTED;

    default:
      throw new Error("Unknown image format ".concat(type));
  }
}

function getDefaultImageType() {
  if (isImageTypeSupported('ndarray')) {
    return 'ndarray';
  }

  if (isImageTypeSupported('html')) {
    return 'html';
  }

  if (isImageTypeSupported('imagebitmap')) {
    return 'imagebitmap';
  }

  if (!_globals.isBrowser) {
    throw new Error("Install '@loaders.gl/polyfills' to parse images under Node.js");
  }

  return (0, _assert["default"])(false);
}
//# sourceMappingURL=image-type.js.map