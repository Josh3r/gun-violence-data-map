"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageLoaders = exports.SVGLoader = exports.BMPLoader = exports.GIFLoader = exports.PNGLoader = exports.JPEGLoader = void 0;

var _parseImage = _interopRequireDefault(require("./lib/parsers/parse-image"));

var _parseSvg = _interopRequireDefault(require("./lib/parsers/parse-svg"));

var _binaryImageParsers = require("./lib/binary-image-api/binary-image-parsers");

var VERSION = typeof "2.0.0" !== 'undefined' ? "2.0.0" : 'latest';
var JPEGLoader = {
  id: 'jpeg',
  category: 'image',
  name: 'JPEG',
  version: VERSION,
  extensions: ['jpg', 'jpeg'],
  mimeType: 'image/jpeg',
  test: function test(arrayBuffer) {
    return (0, _binaryImageParsers.isJpeg)(new DataView(arrayBuffer));
  },
  parse: _parseImage["default"],
  options: {}
};
exports.JPEGLoader = JPEGLoader;
var PNGLoader = {
  id: 'png',
  category: 'image',
  name: 'PNG',
  version: VERSION,
  extensions: ['png'],
  mimeType: 'image/png',
  test: function test(arrayBuffer) {
    return (0, _binaryImageParsers.isPng)(new DataView(arrayBuffer));
  },
  parse: _parseImage["default"],
  options: {}
};
exports.PNGLoader = PNGLoader;
var GIFLoader = {
  id: 'gif',
  category: 'image',
  name: 'GIF',
  version: VERSION,
  extensions: ['gif'],
  mimeType: 'image/gif',
  test: function test(arrayBuffer) {
    return (0, _binaryImageParsers.isGif)(new DataView(arrayBuffer));
  },
  parse: _parseImage["default"],
  options: {}
};
exports.GIFLoader = GIFLoader;
var BMPLoader = {
  id: 'bmp',
  category: 'image',
  name: 'BMP',
  version: VERSION,
  extensions: ['gif'],
  mimeType: 'image/gif',
  test: function test(arrayBuffer) {
    return (0, _binaryImageParsers.isBmp)(new DataView(arrayBuffer));
  },
  parse: _parseImage["default"],
  options: {}
};
exports.BMPLoader = BMPLoader;
var SVGLoader = {
  id: 'svg',
  name: 'SVG',
  version: VERSION,
  extensions: ['svg'],
  mimeType: 'image/svg+xml',
  parse: _parseSvg["default"]
};
exports.SVGLoader = SVGLoader;
var ImageLoaders = [JPEGLoader, PNGLoader, GIFLoader, BMPLoader, SVGLoader];
exports.ImageLoaders = ImageLoaders;
//# sourceMappingURL=image-loaders.js.map