{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["DEFAULT_FONT_SETTINGS","fontSize","DEFAULT_FONT_SIZE","buffer","DEFAULT_BUFFER","sdf","radius","DEFAULT_RADIUS","cutoff","DEFAULT_CUTOFF","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","DEFAULT_LINE_HEIGHT","FONT_SETTINGS_PROPS","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","backgroundColor","type","value","optional","characterSet","DEFAULT_CHAR_SET","fontFamily","DEFAULT_FONT_FAMILY","fontWeight","DEFAULT_FONT_WEIGHT","lineHeight","fontSettings","wordBreak","maxWidth","getText","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","state","fontAtlasManager","FontAtlasManager","context","gl","props","oldProps","changeFlags","fontChanged","updateFontAtlas","styleChanged","textChanged","dataChanged","updateTriggersChanged","all","Array","isArray","data","slice","dataDiff","map","dataRange","getIndex","p","__source","index","replace","transformStringToLetters","setState","finalize","setProps","Object","assign","scale","texture","mapping","iconAtlas","iconMapping","setNeedsRedraw","oldFontSettings","some","prop","info","object","startRow","endRow","iterable","objectInfo","transformedData","transformCharacter","transformed","getSubLayerRow","getSubLayerAccessor","transitions","updateTriggers","SubLayerClass","getSubLayerClass","MultiIconLayer","_dataDiff","getAnchorX","getAnchorXFromTextAnchor","getAnchorY","getAnchorYFromAlignmentBaseline","getPickingIndex","obj","getSubLayerProps","id","getIcon","d","getRowSize","rowSize","getOffsets","offsetLeft","offsetTop","getParagraphSize","size","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\nimport {replaceInRange} from '../utils';\nimport {transformParagraph} from './utils';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  backgroundColor: {type: 'color', value: null, optional: true},\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  fontSettings: {},\n\n  // auto wrapping options\n  wordBreak: 'word-break',\n  maxWidth: {type: 'number', value: -1},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      fontAtlasManager: new FontAtlasManager(this.context.gl)\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this.updateFontAtlas({oldProps, props});\n    }\n\n    const styleChanged =\n      props.lineHeight !== oldProps.lineHeight ||\n      props.wordBreak !== oldProps.wordBreak ||\n      props.maxWidth !== oldProps.maxWidth;\n\n    const textChanged =\n      fontChanged ||\n      styleChanged ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n\n    if (textChanged && Array.isArray(changeFlags.dataChanged)) {\n      const data = this.state.data.slice();\n      const dataDiff = changeFlags.dataChanged.map(dataRange =>\n        replaceInRange({\n          data,\n          getIndex: p => p.__source.index,\n          dataRange,\n          replace: this.transformStringToLetters(dataRange)\n        })\n      );\n      this.setState({data, dataDiff});\n    } else if (textChanged) {\n      this.setState({\n        data: this.transformStringToLetters(),\n        dataDiff: null\n      });\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    // Release resources held by the font atlas manager\n    this.state.fontAtlasManager.finalize();\n  }\n\n  updateFontAtlas({oldProps, props}) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const fontAtlasManager = this.state.fontAtlasManager;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    const {scale, texture, mapping} = fontAtlasManager;\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n\n    this.setNeedsRedraw(true);\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters(dataRange = {}) {\n    const {data, wordBreak, maxWidth, lineHeight, getText} = this.props;\n    const {iconMapping} = this.state;\n    const {startRow, endRow} = dataRange;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n\n    const transformedData = [];\n\n    for (const object of iterable) {\n      const transformCharacter = transformed => {\n        return this.getSubLayerRow(transformed, object, objectInfo.index);\n      };\n\n      objectInfo.index++;\n      const text = getText(object, objectInfo);\n      if (text) {\n        transformParagraph(\n          text,\n          lineHeight,\n          wordBreak,\n          maxWidth,\n          iconMapping,\n          transformCharacter,\n          transformedData\n        );\n      }\n    }\n\n    return transformedData;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    if (typeof getTextAnchor === 'function') {\n      getTextAnchor = this.getSubLayerAccessor(getTextAnchor);\n      return x => TEXT_ANCHOR[getTextAnchor(x)] || 0;\n    }\n    return () => TEXT_ANCHOR[getTextAnchor] || 0;\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    if (typeof getAlignmentBaseline === 'function') {\n      getAlignmentBaseline = this.getSubLayerAccessor(getAlignmentBaseline);\n      return x => TEXT_ANCHOR[getAlignmentBaseline(x)] || 0;\n    }\n    return () => ALIGNMENT_BASELINE[getAlignmentBaseline] || 0;\n  }\n\n  renderLayers() {\n    const {data, dataDiff, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      backgroundColor,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      billboard,\n      sdf,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n        backgroundColor,\n\n        _dataDiff: dataDiff && (() => dataDiff),\n\n        getPosition: this.getSubLayerAccessor(getPosition),\n        getColor: this.getSubLayerAccessor(getColor),\n        getSize: this.getSubLayerAccessor(getSize),\n        getAngle: this.getSubLayerAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this.getSubLayerAccessor(getPixelOffset),\n        getPickingIndex: obj => obj.__source.index,\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n        getIcon: d => d.text,\n        getRowSize: d => d.rowSize,\n        getOffsets: d => [d.offsetLeft, d.offsetTop],\n        getParagraphSize: d => d.size\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}