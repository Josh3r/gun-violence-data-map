{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","createIterable","MultiIconLayer","FontAtlasManager","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SIZE","DEFAULT_BUFFER","DEFAULT_RADIUS","DEFAULT_CUTOFF","replaceInRange","transformParagraph","DEFAULT_FONT_SETTINGS","fontSize","buffer","sdf","radius","cutoff","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","DEFAULT_LINE_HEIGHT","FONT_SETTINGS_PROPS","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","backgroundColor","type","value","optional","characterSet","fontFamily","fontWeight","lineHeight","fontSettings","wordBreak","maxWidth","getText","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","initializeState","state","fontAtlasManager","context","gl","updateState","props","oldProps","changeFlags","fontChanged","updateFontAtlas","styleChanged","textChanged","dataChanged","updateTriggersChanged","all","Array","isArray","data","slice","dataDiff","map","dataRange","getIndex","p","__source","index","replace","transformStringToLetters","setState","finalizeState","finalize","setProps","Object","assign","scale","texture","mapping","iconAtlas","iconMapping","setNeedsRedraw","oldFontSettings","some","prop","getPickingInfo","info","object","startRow","endRow","iterable","objectInfo","transformedData","transformCharacter","transformed","getSubLayerRow","getAnchorXFromTextAnchor","getSubLayerAccessor","getAnchorYFromAlignmentBaseline","renderLayers","transitions","updateTriggers","SubLayerClass","getSubLayerClass","_dataDiff","getAnchorX","getAnchorY","getPickingIndex","obj","getSubLayerProps","id","getIcon","d","getRowSize","rowSize","getOffsets","offsetLeft","offsetTop","getParagraphSize","size","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF\n} from './font-atlas-manager';\nimport {replaceInRange} from '../utils';\nimport {transformParagraph} from './utils';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  backgroundColor: {type: 'color', value: null, optional: true},\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  fontSettings: {},\n\n  // auto wrapping options\n  wordBreak: 'word-break',\n  maxWidth: {type: 'number', value: -1},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      fontAtlasManager: new FontAtlasManager(this.context.gl)\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this.updateFontAtlas({oldProps, props});\n    }\n\n    const styleChanged =\n      props.lineHeight !== oldProps.lineHeight ||\n      props.wordBreak !== oldProps.wordBreak ||\n      props.maxWidth !== oldProps.maxWidth;\n\n    const textChanged =\n      fontChanged ||\n      styleChanged ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n\n    if (textChanged && Array.isArray(changeFlags.dataChanged)) {\n      const data = this.state.data.slice();\n      const dataDiff = changeFlags.dataChanged.map(dataRange =>\n        replaceInRange({\n          data,\n          getIndex: p => p.__source.index,\n          dataRange,\n          replace: this.transformStringToLetters(dataRange)\n        })\n      );\n      this.setState({data, dataDiff});\n    } else if (textChanged) {\n      this.setState({\n        data: this.transformStringToLetters(),\n        dataDiff: null\n      });\n    }\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    // Release resources held by the font atlas manager\n    this.state.fontAtlasManager.finalize();\n  }\n\n  updateFontAtlas({oldProps, props}) {\n    const {characterSet, fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const fontAtlasManager = this.state.fontAtlasManager;\n    fontAtlasManager.setProps(\n      Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n        characterSet,\n        fontFamily,\n        fontWeight\n      })\n    );\n\n    const {scale, texture, mapping} = fontAtlasManager;\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n\n    this.setNeedsRedraw(true);\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters(dataRange = {}) {\n    const {data, wordBreak, maxWidth, lineHeight, getText} = this.props;\n    const {iconMapping} = this.state;\n    const {startRow, endRow} = dataRange;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n\n    const transformedData = [];\n\n    for (const object of iterable) {\n      const transformCharacter = transformed => {\n        return this.getSubLayerRow(transformed, object, objectInfo.index);\n      };\n\n      objectInfo.index++;\n      const text = getText(object, objectInfo);\n      if (text) {\n        transformParagraph(\n          text,\n          lineHeight,\n          wordBreak,\n          maxWidth,\n          iconMapping,\n          transformCharacter,\n          transformedData\n        );\n      }\n    }\n\n    return transformedData;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    if (typeof getTextAnchor === 'function') {\n      getTextAnchor = this.getSubLayerAccessor(getTextAnchor);\n      return x => TEXT_ANCHOR[getTextAnchor(x)] || 0;\n    }\n    return () => TEXT_ANCHOR[getTextAnchor] || 0;\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    if (typeof getAlignmentBaseline === 'function') {\n      getAlignmentBaseline = this.getSubLayerAccessor(getAlignmentBaseline);\n      return x => TEXT_ANCHOR[getAlignmentBaseline(x)] || 0;\n    }\n    return () => ALIGNMENT_BASELINE[getAlignmentBaseline] || 0;\n  }\n\n  renderLayers() {\n    const {data, dataDiff, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      backgroundColor,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      billboard,\n      sdf,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n        backgroundColor,\n\n        _dataDiff: dataDiff && (() => dataDiff),\n\n        getPosition: this.getSubLayerAccessor(getPosition),\n        getColor: this.getSubLayerAccessor(getColor),\n        getSize: this.getSubLayerAccessor(getSize),\n        getAngle: this.getSubLayerAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this.getSubLayerAccessor(getPixelOffset),\n        getPickingIndex: obj => obj.__source.index,\n        billboard,\n        sizeScale: sizeScale * scale,\n        sizeUnits,\n        sizeMinPixels: sizeMinPixels * scale,\n        sizeMaxPixels: sizeMaxPixels * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n        getIcon: d => d.text,\n        getRowSize: d => d.rowSize,\n        getOffsets: d => [d.offsetLeft, d.offsetTop],\n        getParagraphSize: d => d.size\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}