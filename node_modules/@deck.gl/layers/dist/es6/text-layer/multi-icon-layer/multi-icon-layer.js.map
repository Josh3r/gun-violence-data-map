{"version":3,"sources":["../../../../src/text-layer/multi-icon-layer/multi-icon-layer.js"],"names":["createIterable","IconLayer","vs","fs","DEFAULT_GAMMA","DEFAULT_BUFFER","defaultProps","backgroundColor","type","value","optional","getRowSize","x","rowSize","getOffsets","offsets","getParagraphSize","size","getAnchorX","anchorX","getAnchorY","anchorY","getPixelOffset","getPickingIndex","objectIndex","MultiIconLayer","getShaders","Object","assign","initializeState","attributeManager","getAttributeManager","addInstanced","instanceOffsets","accessor","update","calculateInstanceOffsets","instancePixelOffset","transition","instancePickingColors","calculateInstancePickingColors","updateState","updateParams","changeFlags","oldProps","props","updateTriggersChanged","invalidate","Array","isArray","map","c","slice","setState","draw","uniforms","sdf","state","shouldDrawBackground","buffer","gamma","Boolean","attribute","startRow","endRow","data","iconMapping","getIcon","i","iterable","object","icon","rect","width","height","rowWidth","offsetX","offsetY","rowOffset","pickingColor","point","index","encodePickingColor","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createIterable} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport vs from './multi-icon-layer-vertex.glsl';\nimport fs from './multi-icon-layer-fragment.glsl';\n\n// TODO expose as layer properties\nconst DEFAULT_GAMMA = 0.2;\nconst DEFAULT_BUFFER = 192.0 / 256;\n\nconst defaultProps = {\n  backgroundColor: {type: 'color', value: null, optional: true},\n  // each paragraph can have one or multiple row(s)\n  // each row can have one or multiple character(s)\n  getRowSize: {type: 'accessor', value: x => x.rowSize || [0, 0]},\n  // offset from the left, top position of the paragraph\n  getOffsets: {type: 'accessor', value: x => x.offsets || [0, 0]},\n  // [width, height] of the paragraph\n  getParagraphSize: {type: 'accessor', value: x => x.size || [1, 1]},\n  // 1: left, 0: middle, -1: right\n  getAnchorX: {type: 'accessor', value: x => x.anchorX || 0},\n  // 1: top, 0: center, -1: bottom\n  getAnchorY: {type: 'accessor', value: x => x.anchorY || 0},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  // object with the same pickingIndex will be picked when any one of them is being picked\n  getPickingIndex: {type: 'accessor', value: x => x.objectIndex}\n};\n\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      vs,\n      fs\n    });\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: ['getIcon', 'getAnchorX', 'getAnchorY'],\n        update: this.calculateInstanceOffsets\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instancePickingColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: 3,\n        update: this.calculateInstancePickingColors\n      }\n    });\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    const {changeFlags, oldProps, props} = updateParams;\n\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)\n    ) {\n      this.getAttributeManager().invalidate('instanceOffsets');\n    }\n\n    if (props.backgroundColor !== oldProps.backgroundColor) {\n      const backgroundColor = Array.isArray(props.backgroundColor)\n        ? props.backgroundColor.map(c => c / 255.0).slice(0, 3)\n        : null;\n      this.setState({backgroundColor});\n    }\n  }\n\n  draw({uniforms}) {\n    const {sdf} = this.props;\n    const {backgroundColor} = this.state;\n    const shouldDrawBackground = Array.isArray(backgroundColor);\n\n    super.draw({\n      uniforms: Object.assign({}, uniforms, {\n        // Refer the following doc about gamma and buffer\n        // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n        buffer: DEFAULT_BUFFER,\n        gamma: DEFAULT_GAMMA,\n        sdf: Boolean(sdf),\n        backgroundColor: backgroundColor || [0, 0, 0],\n        shouldDrawBackground\n      })\n    });\n  }\n\n  calculateInstanceOffsets(attribute, {startRow, endRow}) {\n    const {\n      data,\n      iconMapping,\n      getIcon,\n      getAnchorX,\n      getAnchorY,\n      getParagraphSize,\n      getRowSize,\n      getOffsets\n    } = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      const icon = getIcon(object);\n      const rect = iconMapping[icon] || {};\n      const [width, height] = getParagraphSize(object);\n      const [rowWidth] = getRowSize(object);\n      const [offsetX, offsetY] = getOffsets(object);\n      const anchorX = getAnchorX(object);\n      const anchorY = getAnchorY(object);\n\n      // For a multi-line object, offset in x-direction needs consider\n      // the row offset in the paragraph and the object offset in the row\n      const rowOffset = ((1 - anchorX) * (width - rowWidth)) / 2;\n      value[i++] = ((anchorX - 1) * width) / 2 + rowOffset + rect.width / 2 + offsetX || 0;\n      value[i++] = ((anchorY - 1) * height) / 2 + rect.height / 2 + offsetY || 0;\n    }\n  }\n\n  calculateInstancePickingColors(attribute, {startRow, endRow}) {\n    const {data, getPickingIndex} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const pickingColor = [];\n    const {iterable} = createIterable(data, startRow, endRow);\n\n    for (const point of iterable) {\n      const index = getPickingIndex(point);\n      this.encodePickingColor(index, pickingColor);\n\n      value[i++] = pickingColor[0];\n      value[i++] = pickingColor[1];\n      value[i++] = pickingColor[2];\n    }\n  }\n}\n\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n"],"file":"multi-icon-layer.js"}