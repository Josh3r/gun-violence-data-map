export var dashShaders = {
  inject: {
    'vs:#decl': "\nattribute vec2 instanceDashArrays;\nvarying vec2 vDashArray;\n",
    'vs:#main-end': "\nvDashArray = instanceDashArrays;\n",
    'fs:#decl': "\nuniform float dashAlignMode;\nvarying vec2 vDashArray;\nfloat mod2(float a, float b) {\n  return a - floor(a / b) * b;\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n",
    'fs:#main-start': "\n  float solidLength = vDashArray.x;\n  float gapLength = vDashArray.y;\n  float unitLength = solidLength + gapLength;\n\n  if (unitLength > 0.0) {\n    unitLength = mix(\n      unitLength,\n      vPathLength / round(vPathLength / unitLength),\n      dashAlignMode\n    );\n\n    float offset = dashAlignMode * solidLength / 2.0;\n\n    if (\n      gapLength > 0.0 &&\n      vPathPosition.y >= 0.0 &&\n      vPathPosition.y <= vPathLength &&\n      mod2(vPathPosition.y + offset, unitLength) > solidLength\n    ) {\n      discard;\n    }\n  }  \n"
  }
};
//# sourceMappingURL=shaders.glsl.js.map